<?xml version='1.0'?>
<rules xmlns="http://www.loc.gov/bf2marc"
       xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
       xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
       xmlns:bf="http://id.loc.gov/ontologies/bibframe/"
       xmlns:bflc="http://id.loc.gov/ontologies/bflc/"
       xmlns:madsrdf="http://www.loc.gov/mads/rdf/v1#"
       xmlns:marc="http://www.loc.gov/MARC21/slim"
       xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <df tag="210" lang-xpath="bf:mainTitle">
    <context xpath="bf:Instance/bf:title/*[local-name() = 'AbbreviatedTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AbbreviatedTitle']] |
                    bf:Work/bf:title/*[local-name() = 'AbbreviatedTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AbbreviatedTitle']]">
      <ind1 default="0"/>
      <ind2 default="0">
        <switch>
          <case test="bf:assigner/bf:Agent/bf:code = 'issnkey'"><text> </text></case>
        </switch>
      </ind2>
      <sf code="a" chopPunct="true" repeatable="false"><select xpath="bf:mainTitle"/></sf>
      <sf code="b" chopPunct="false" repeatable="false">
        <select xpath="bf:qualifier" />
      </sf>
      <switch>
        <case test="bf:assigner/bf:Agent[not(bf:code='issnkey')]">
          <sf code="2" chopPunct="true">
            <select xpath="bf:assigner/bf:Agent[not(bf:code='issnkey')]/bf:code"/>
          </sf>
        </case>
      </switch>
    </context>
  </df>

  <df tag="222" lang-xpath="bf:mainTitle">
    <context xpath="bf:Work/bf:title/*[local-name() = 'KeyTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/KeyTitle']]">
      <ind1 default=" "/>
      <ind2 default="0">
        <switch>
          <case test="bflc:nonSortNum">
            <transform>
              <xsl:value-of select="bflc:nonSortNum"/>
            </transform>
          </case>
          <case test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:mainTitle))">
            <transform>
              <xsl:value-of select="string-length(bf:mainTitle) - string-length(bflc:titleSortKey)"/>
            </transform>
          </case>
        </switch>
      </ind2>
      <sf code="a" chopPunct="true" repeatable="false"><select xpath="bf:mainTitle"/></sf>
      <sf code="b" chopPunct="false" repeatable="false"><select xpath="bf:qualifier"/></sf>
    </context>
  </df>

  <!-- 
    This handles the relationship/Relationship pattern for what will 
    become a Name/Title or Title added entry.
    It is predicated on a Hub being referenced.
  -->
  <df tag="240" lang-xpath="rdfs:label" lang-prefer="transliterated">
    <context xpath="bf:Work/bf:expressionOf[contains(@rdf:resource, 'hubs')][../bf:contribution/*[local-name()='PrimaryContribution'] or ../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')]] |
                    bf:Work/bf:expressionOf/bf:*[contains(@rdf:about, 'hubs') or bflc:marcKey or marc:record][../../bf:contribution/*[local-name()='PrimaryContribution'] or ../../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]
      ">
      
      <var name="relURI">
        <switch>
          <case test="contains(@rdf:resource,'id.loc.gov/resources/hubs')"><transform><xsl:value-of select="@rdf:resource"/></transform></case>
          <case test="contains(@rdf:about,'id.loc.gov/resources/hubs')"><transform><xsl:value-of select="@rdf:about"/></transform></case>
        </switch>
      </var>
      <var name="vRelResourcePreNS">
        <transform>
          <xsl:call-template name="tGetRelResource">
            <xsl:with-param name="pRelUri" select="$relURI"/>
            <xsl:with-param name="pContext" select="."/>
          </xsl:call-template>
        </transform>
      </var>
      <var name="vRelResource" xpath="exsl:node-set($vRelResourcePreNS)" />
      
      <switch>
        <case test="$xslProcessor='libxslt' and contains($relURI, 'resources/hubs') and not(bflc:marcKey)">
          <transform>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed expressionOf node/Hub.  No 240 output.</xsl:message>
          </transform>
        </case>
      </switch>

      <ind1 default="1"/>
      <ind2 default="0" />
      <switch>
        <case test="$vRelResource//marc:datafield[@tag = '240']">
          <!-- This was from a looked up resource, so a fuller MARC record, not a marcKey, -->
          <transform> 
            <xsl:for-each select="$vRelResource//marc:datafield[@tag = '240']/marc:subfield">
              <marc:subfield>
                <xsl:attribute name="code"><xsl:value-of select="@code"/></xsl:attribute>
                <xsl:value-of select="."/>
              </marc:subfield>
            </xsl:for-each>
          </transform>
        </case>
        <case test="$vRelResource//marc:datafield[starts-with(@tag, '1')]">
          <transform> 
            <xsl:for-each select="$vRelResource//marc:datafield[starts-with(@tag, '1')]/marc:subfield[(@code = 't' or preceding-sibling::marc:subfield[@code = 't']) and contains('dgfhklmnoprst',@code)]">
              <marc:subfield>
                <xsl:attribute name="code"><xsl:value-of select="translate(@code, 't', 'a')"/></xsl:attribute>
                <xsl:value-of select="."/>
              </marc:subfield>
            </xsl:for-each>
          </transform>
        </case>
      </switch>
      
      <sf code="1">
        <switch>
          <case test="$relURI != ''">
            <transform><xsl:value-of select="$relURI"/></transform>
          </case>
        </switch>
      </sf>
    </context>
  </df>
  
  <df tag="240" repeatable="false" lang-xpath="bf:mainTitle" lang-prefer="transliterated">
    <!-- This should be copied from tag 130 for all subfields -->
    <context xpath="bf:Work/bf:expressionOf/child::node()[
        not(contains(@rdf:resource, 'hubs')) and not(contains(@rdf:about, 'hubs')) and 
        not(contains(@rdf:resource, 'REPLACE')) and not(contains(@rdf:about, 'REPLACE')) and 
        not(bflc:marcKey or marc:record) and 
        (local-name() = 'Hub' or local-name() = 'Work') and bf:title][../../bf:contribution/*[local-name()='PrimaryContribution'] or ../../bf:contribution/*/rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]">
      <ind1 default="1"/>
      <ind2 default="0">
        <switch>
          <case test="bf:title/bf:Title/bflc:nonSortNum">
            <transform>
              <xsl:value-of select="bf:title/bf:Title/bflc:nonSortNum"/>
            </transform>
          </case>
          <case test="bf:title/bf:Title/bflc:titleSortKey and (string-length(bf:title/bf:Title/bflc:titleSortKey) &lt; string-length(bf:title/bf:Title/bf:mainTitle))">
            <transform>
              <xsl:value-of select="string-length(bf:title/bf:Title/bf:mainTitle) - string-length(bf:title/bf:Title/bflc:titleSortKey)"/>
            </transform>
          </case>
        </switch>
      </ind2>
      
      
          <sf code="a" chopPunct="true" repeatable="false">
            <switch>
              <case test="bf:title/bf:Title/bf:mainTitle">
                <select xpath="bf:title/bf:Title/bf:mainTitle"/>
              </case>          
            </switch>
          </sf>
          <sf code="d"><select xpath="bf:legalDate"/></sf>
          <sf code="f" repeatable="false"><select xpath="bf:originDate"/></sf>
          <sf code="m" chopPunct="true"><select xpath="bf:musicMedium/bf:MusicMedium/rdfs:label"/></sf>
          <sf code="n" chopPunct="true"><select xpath="bf:title/bf:Title/bf:partNumber"/></sf>
          <sf code="p" chopPunct="true"><select xpath="bf:title/bf:Title/bf:partName"/></sf>
          <switch>
            <case test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
              <sf code="o">arranged</sf>
            </case>
          </switch>
          <sf code="r" chopPunct="true"><select xpath="bf:musicKey"/></sf>
          <sf code="s" chopPunct="true"><select xpath="bf:version"/></sf>

      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vIdType">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vIdType != ''"><xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/></xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
      <sf code="2"><select xpath="bf:source/bf:Source/bf:code"/></sf>
    </context>
  </df>

  <df tag="242" lang-xpath="bf:mainTitle">
    <context xpath="bf:Instance/bf:title/*[(local-name() = 'VariantTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle']) and bf:variantType = 'translated']">
      <ind1 default="1"/>
      <ind2 default="0">
        <switch>
          <case test="bflc:nonSortNum">
            <transform>
              <xsl:value-of select="bflc:nonSortNum"/>
            </transform>
          </case>
          <case test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:mainTitle))">
            <transform>
              <xsl:value-of select="string-length(bf:mainTitle) - string-length(bflc:titleSortKey)"/>
            </transform>
          </case>
        </switch>
      </ind2>
      <sf code="a" chopPunct="true" repeatable="false"><select xpath="bf:mainTitle"/></sf>
      <sf code="b" chopPunct="true" repeatable="false"><select xpath="bf:subtitle"/></sf>
      <sf code="n" chopPunct="true"><select xpath="bf:partNumber"/></sf>
      <sf code="p" chopPunct="true"><select xpath="bf:partName"/></sf>
        <var name="langCode">
          <lookup map="languages" targetField="iso6392">
            <lookupField name="xmllang" xpath="bf:mainTitle/@xml:lang"/>
          </lookup>
        </var>
       <switch>
        <case test="$langCode != ''">
          <sf code="y">
              <transform>
                <xsl:value-of select="$langCode" />
              </transform>
          </sf>
        </case>
        <case test="bf:mainTitle/@xml:lang != ''">
          <sf code="y">
              <transform>
                <xsl:value-of select="bf:mainTitle/@xml:lang " />
              </transform>
          </sf>
        </case>
      </switch>
    </context>
  </df>

  <df tag="243" repeatable="false" lang-xpath="bf:mainTitle" lang-prefer="transliterated">
    <context xpath="bf:Work/bf:title/*[
                      local-name()='CollectiveTitle' or
                      rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/CollectiveTitle']
                    ]">
      <ind1 default="1"/>
      <ind2 default="0">
        <switch>
          <case test="bflc:nonSortNum">
            <transform>
              <xsl:value-of select="bflc:nonSortNum"/>
            </transform>
          </case>
          <case test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:mainTitle))">
            <transform>
              <xsl:value-of select="string-length(bf:mainTitle) - string-length(bflc:titleSortKey)"/>
            </transform>
          </case>
        </switch>
      </ind2>
      <sf code="a" chopPunct="true" repeatable="false"><select xpath="bf:mainTitle"/></sf>
    </context>
  </df>

  <!-- 245 (paired with 880) -->
  <!-- $6 occurence number for 245 is always 01 -->
  <!-- this is kind of inelegant; would be better to have this be a mode of the df element -->
  <df tag="245" repeatable="false">
    <context xpath="bf:Instance[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance')]/bf:title/bf:Title[not(rdf:type)]|bf:Work[not(../bf:Instance/bf:title/bf:Title[not(rdf:type)])]/bf:title/bf:Title[not(rdf:type)]">
      <ind1 default="0">
        <switch>
          <case test="/rdf:RDF/bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]">1</case>
        </switch>
      </ind1>
      <ind2 default="0">
        <switch>
          <case test="bflc:nonSortNum[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <transform>
              <xsl:value-of select="bflc:nonSortNum[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]"/>
            </transform>
          </case>
          <case test="bflc:titleSortKey[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))] and
                      (string-length(bflc:titleSortKey[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]) &lt; string-length(bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]))">
            <transform>
              <xsl:value-of select="string-length(bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]) - string-length(bflc:titleSortKey[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))])"/>
            </transform>
          </case>
        </switch>
      </ind2>
      <switch>
        <case test="count(bf:mainTitle)=2 and bf:mainTitle[@xml:lang] and bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <sf code="6">880-01</sf>
        </case>
      </switch>
      <sf code="a" chopPunct="true" repeatable="false">
        <switch>
          <case test="bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <select xpath="bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]"/>
          </case>
          <case test="count(bf:mainTitle)=1 and bf:mainTitle[@xml:lang]">
            <select xpath="bf:mainTitle[@xml:lang]" />
          </case>
        </switch>
      </sf>
      <sf code="b" chopPunct="true" repeatable="false">
        <switch>
          <case test="bf:subtitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <select xpath="bf:subtitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]"/>
          </case>
          <case test="count(bf:subtitle)=1 and bf:subtitle[@xml:lang]">
            <select xpath="bf:subtitle[@xml:lang]" />
          </case>
        </switch>
      </sf>
      <sf code="c" chopPunct="false" repeatable="false">
        <switch>
          <case test="ancestor::bf:Instance/bf:responsibilityStatement[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <select xpath="ancestor::bf:Instance/bf:responsibilityStatement[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]"/>
          </case>
          <case test="count(ancestor::bf:Instance/bf:responsibilityStatement)=1 and ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang]">
            <select xpath="ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang]" />
          </case>
        </switch>
      </sf>
      <sf code="n" chopPunct="true">
        <switch>
          <case test="bf:partNumber[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <select xpath="bf:partNumber[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]"/>
          </case>
          <case test="count(bf:partNumber)=1 and bf:partNumber[@xml:lang]">
            <select xpath="bf:partNumber[@xml:lang]" />
          </case>
        </switch>
      </sf>
      <sf code="p" chopPunct="true">
        <switch>
          <case test="bf:partName[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <select xpath="bf:partName[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]"/>
          </case>
          <case test="count(bf:partName)=1 and bf:partName[@xml:lang]">
            <select xpath="bf:partName[@xml:lang]" />
          </case>
        </switch>
      </sf>
    </context>
  </df>
  <select xpath="bf:Instance[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance')]/bf:title/bf:Title[not(rdf:type)]|bf:Work[not(../bf:Instance/bf:title/bf:Title[not(rdf:type)])]/bf:title/bf:Title[not(rdf:type)]">
    <var name="v880Script">
      <lookup map="df880script" targetField="code">
        <lookupField name="lang" xpath="translate(substring-after(bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]/@xml:lang,'-'),$upper,$lower)"/>
      </lookup>
    </var>
    <switch>
      <case test="position()=1 and (count(bf:mainTitle)=2 and bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))] and bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))])">
        <df tag="880">
          <ind1 default="0">
            <switch>
              <case test="/rdf:RDF/bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[contains(@rdf:resource, '/PrimaryContribution')]]">1</case>
            </switch>
          </ind1>
          <ind2 default="0">
            <switch>
              <case test="bflc:nonSortNum[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                <transform>
                  <xsl:value-of select="bflc:nonSortNum[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]"/>
                </transform>
              </case>
              <case test="bflc:titleSortKey[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))] and
                          (string-length(bflc:titleSortKey[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]) &lt; string-length(bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]))">
                <transform>
                  <xsl:value-of select="string-length(bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]) - string-length(bflc:titleSortKey[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))])"/>
                </transform>
              </case>
            </switch>
          </ind2>
          <sf code="6">
            <switch>
              <case test="$v880Script != ''">
                <transform><xsl:value-of select="concat('245-01/',$v880Script)"/></transform>
              </case>
              <case test="default">245-01</case>
            </switch>
          </sf>
          <sf code="a" chopPunct="true" repeatable="false">
            <select xpath="bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]"/>
          </sf>
          <sf code="b" chopPunct="true" repeatable="false">
            <select xpath="bf:subtitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]"/>
          </sf>
          <sf code="c" chopPunct="false" repeatable="false">
            <select xpath="ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]"/>
          </sf>
          <sf code="n" chopPunct="true">
            <select xpath="bf:partNumber[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]"/>
          </sf>
          <sf code="p" chopPunct="true">
            <select xpath="bf:partName[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]"/>
          </sf>
        </df>
      </case>
    </switch>
  </select>

  <df tag="246" lang-xpath="bf:mainTitle">
    <context xpath="
                      bf:*[local-name()='Instance' or local-name()='Work']/bf:title/bf:*[(
                        local-name()='VariantTitle' or
                        local-name()='ParallelTitle' or
                        local-name()='TranscribedTitle' or
                        rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle'] or
                        rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/ParallelTitle'] or
                        rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/TranscribedTitle']
                      ) and 
                        not(bf:variantType = 'translated') and
                        not(bf:variantType = 'former') and
                        bf:mainTitle]
                      |
                      bf:Instance/bf:hasItem/bf:Item/bf:title/bf:*[
                        bflc:applicableInstitution/*/bf:code='DLC' and 
                        (
                        local-name()='VariantTitle' or
                        local-name()='ParallelTitle' or
                        local-name()='TranscribedTitle' or
                        rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle'] or
                        rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/ParallelTitle'] or
                        rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/TranscribedTitle']
                      ) and 
                      not(bf:variantType = 'translated') and
                      not(bf:variantType = 'former') and
                      bf:mainTitle]
                    ">
      <ind1 default="1"/>
      <ind2 default=" ">
        <switch>
          <case test="local-name()='ParallelTitle' or
                      rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/ParallelTitle']">1</case>
          <case test="bf:variantType = 'portion'">0</case>
          <case test="bf:variantType = 'distinctive'">2</case>
          <case test="bf:variantType = 'cover'">4</case>
          <case test="bf:variantType = 'added title page'">5</case>
          <case test="bf:variantType = 'caption'">6</case>
          <case test="bf:variantType = 'running'">7</case>
          <case test="bf:variantType = 'spine'">8</case>
        </switch>
      </ind2>
      <sf code="i" chopPunct="true" repeatable="false">
        <select xpath="bf:note/bf:Note/rdfs:label"/>
      </sf>
      <sf code="a" chopPunct="true" repeatable="false"><select xpath="bf:mainTitle"/></sf>
      <sf code="b" chopPunct="true" repeatable="false"><select xpath="bf:subtitle"/></sf>
      <sf code="f" chopPunct="true" repeatable="false"><select xpath="bf:date"/></sf>
      <sf code="n" chopPunct="true"><select xpath="bf:partNumber"/></sf>
      <sf code="p" chopPunct="true"><select xpath="bf:partName"/></sf>
      <sf code="5" repeatable="false"><select xpath="bflc:applicableInstitution/bf:Agent/bf:code"/></sf>
    </context>
  </df>

  <df tag="247" lang-xpath="bf:mainTitle">
    <context xpath="//bf:title/*[(
                      local-name()='VariantTitle' or
                      rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle']
                    ) and
                    bf:variantType = 'former']">
      <ind1 default="1"/>
      <ind2 default="0"/>
      <sf code="a" chopPunct="true" repeatable="false">
        <switch>
          <case test="bf:mainTitle"><select xpath="bf:mainTitle"/></case>
          <case test="rdfs:label"><select xpath="rdfs:label"/></case>
        </switch>
      </sf>
      <sf code="b" chopPunct="true" repeatable="false">
        <select xpath="bf:subtitle"/>
      </sf>
      <sf code="f" chopPunct="true" repeatable="false">
        <select xpath="bf:date"/>
      </sf>
      <sf code="g" chopPunct="true" repeatable="false">
        <select xpath="bf:qualifier">
          <transform>
            <xsl:value-of select="concat('(',.,')')"/>
          </transform>
        </select>
      </sf>
      <sf code="n" chopPunct="true">
        <select xpath="bf:partNumber"/>
      </sf>
      <sf code="p" chopPunct="true">
        <select xpath="bf:partName"/>
      </sf>
      <sf code="x" repeatable="false">
        <select xpath="bf:identifiedBy/*[local-name()='Issn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']]/rdf:value"/>
      </sf>
    </context>
  </df>

  <!-- 250/880 -->
  <select xpath="bf:Instance/bf:editionStatement">
    <var name="v880Script">
      <switch>
        <case test="@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))">
          <lookup map="df880script" targetField="code">
            <lookupField name="lang" xpath="translate(substring-after(@xml:lang,'-'),$upper,$lower)"/>
          </lookup>
        </case>
      </switch>
    </var>
    <switch>
      <case test="$v880Script != ''">
        <df tag="880">
          <ind1 default=" "/>
          <ind2 default=" "/>
          <sf code="6"><transform><xsl:value-of select="concat('250-00/',$v880Script)"/></transform></sf>
          <sf code="a" chopPunct="false"><select xpath="."/></sf>
        </df>
      </case>
      <case test="default">
        <df tag="250">
          <ind1 default=" "/>
          <ind2 default=" "/>
          <sf code="a" chopPunct="false"><select xpath="."/></sf>
        </df>
      </case>
    </switch>
  </select>

  <df tag="254" repeatable="false">
    <context xpath="bf:Work/bf:musicFormat/bf:MusicFormat">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="a" chopPunct="true" repeatable="false"><select xpath="rdfs:label"/></sf>
    </context>
  </df>

  <df tag="255">
    <context xpath="bf:Work/bf:scale[not(bf:Scale)]">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="a" chopPunct="true" repeatable="false"><select xpath="."/></sf>
    </context>
  </df>

  <!-- 255 from Scale label -->
  <select xpath="bf:Work/bf:scale/bf:Scale/rdfs:label">
    <switch>
      <case test="translate(.,$upper,$lower) != 'linear scale'">
        <df tag="255">
          <ind1 default=" "/>
          <ind2 default=" "/>
          <sf code="a" repeatable="false"><select xpath="."/></sf>
        </df>
      </case>
    </switch>
  </select>

  <df tag="255">
    <context xpath="bf:Work/bf:scale/bf:Scale/bf:note/bf:Note/rdfs:label">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="a" repeatable="false"><select xpath="."/></sf>
    </context>
  </df>

  <df tag="255">
    <context xpath="bf:Work/bf:cartographicAttributes/bf:Cartographic[bf:projection or
                    bf:coordinates or
                    bf:ascensionAndDeclination or
                    bf:equinox or
                    bf:outerGRing or
                    bf:exclusionGRing]">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="b" chopPunct="true" repeatable="false">
        <select xpath="bf:projection/bf:Projection/rdfs:label"/>
      </sf>
      <sf code="c" repeatable="false"><select xpath="bf:coordinates"/></sf>
      <sf code="d" repeatable="false"><select xpath="bf:ascensionAndDeclination"/></sf>
      <sf code="e" repeatable="false"><select xpath="bf:equinox"/></sf>
      <sf code="f" repeatable="false"><select xpath="bf:outerGRing"/></sf>
      <sf code="g" repeatable="false"><select xpath="bf:exclusionGRing"/></sf>
    </context>
  </df>

  <!-- rules for 256 in with 5XX (notes) -->

  <df tag="257">
    <context xpath="bf:Instance/bf:originPlace/bf:Place">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="a"><select xpath="rdfs:label"/></sf>
      <sf code="2">
        <select xpath="bf:source">
          <var name="vUri">
            <switch>
              <case test="@rdf:resource"><transform><xsl:value-of select="@rdf:resource"/></transform></case>
              <case test="*/@rdf:about"><transform><xsl:value-of select="*/@rdf:about"/></transform></case>
            </switch>
          </var>
          <var name="vSourceCode">
            <transform>
              <xsl:call-template name="tUriCode">
                <xsl:with-param name="pUri" select="$vUri"/>
              </xsl:call-template>
            </transform>
          </var>
          <switch>
            <case test="$vSourceCode != ''"><transform><xsl:value-of select="$vSourceCode"/></transform></case>
            <case test="default"><transform><xsl:value-of select="*/bf:code"/></transform></case>
          </switch>
        </select>
      </sf>
    </context>
  </df>

  <df tag="263" repeatable="false">
    <context xpath="bf:Instance/bflc:projectedProvisionDate">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="a"><select xpath="."/></sf>
    </context>
  </df>

  <!-- 264/880 -->
  <!-- $6 occurence offset at 10, after 20 will throw an error -->
  <select xpath="bf:Instance/bf:provisionActivity/*[
                    (local-name()='Production' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Production'] or
                    local-name()='Distribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Distribution'] or
                    local-name()='Manufacture' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manufacture'] or
                    local-name()='Publication' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Publication']) and
                    (
                      (bflc:simplePlace or bflc:simpleAgent or bflc:simpleDate) or 
                      (bf:place/bf:*[not(@rdf:about)]/rdfs:label or bf:agent/bf:*[not(@rdf:about)]/rdfs:label or bf:date[not(@rdf:datatype)])
                    )]">
    <var name="serlORintg">
      <switch>
        <case test="ancestor::bf:Instance/bf:issuance//@rdf:*[. = 'http://id.loc.gov/vocabulary/issuance/serl']">1</case>
        <case test="ancestor::bf:Instance/bf:issuance//@rdf:*[. = 'http://id.loc.gov/vocabulary/issuance/intg']">2</case>
        <case test="default">0</case>
      </switch>
    </var>
    <var name="v264type">
      <switch>
        <case test="local-name()='Publication' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Publication']">1</case>
        <case test="local-name()='Production' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Production']">0</case>
        <case test="local-name()='Distribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Distribution']">2</case>
        <case test="local-name()='Manufacture' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manufacture']">3</case>
        <case test="default">1</case>
      </switch>
    </var>
    <var name="v264typeCount">
      <switch>
        <case test="$v264type='1'">
          <select xpath="count(ancestor::bf:Instance/bf:provisionActivity/*[(local-name()='Publication' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Publication'])])" />
        </case>
        <case test="$v264type='0'">
          <select xpath="count(ancestor::bf:Instance/bf:provisionActivity/*[(local-name()='Production' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Production'])])" />
        </case>
        <case test="$v264type='2'">
          <select xpath="count(ancestor::bf:Instance/bf:provisionActivity/*[(local-name()='Distribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Distribution'])])" />
        </case>
        <case test="$v264type='3'">
          <select xpath="count(ancestor::bf:Instance/bf:provisionActivity/*[(local-name()='Manufacture' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manufacture'])])" />
        </case>
      </switch>
    </var>
    <var name="v880Script">
      <switch>
        <case test="bflc:simplePlace/@xml:lang and not(contains(translate(bflc:simplePlace/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))">
          <lookup map="df880script" targetField="code">
            <lookupField name="lang" xpath="translate(substring-after(bflc:simplePlace/@xml:lang,'-'),$upper,$lower)"/>
          </lookup>
        </case>
        <case test="bf:place/*/rdfs:label/@xml:lang and not(contains(translate(bf:place/*/rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))">
          <lookup map="df880script" targetField="code">
            <lookupField name="lang" xpath="translate(substring-after(bf:place/*/rdfs:label/@xml:lang,'-'),$upper,$lower)"/>
          </lookup>
        </case>
      </switch>
    </var>
    <var name="v880Occurence">
      <transform><xsl:value-of select="10+position()"/></transform>
    </var>
    <switch>
      <case test="$v880Occurence &lt; 21">
        <df tag="264">
          <ind1 default=" ">
            <switch>
              <case test="$serlORintg='1' and $v264typeCount='1'"><text> </text></case>
              <case test="$serlORintg='1' and $v264typeCount!='1' and bf:status/bf:Status//@rdf:*[. = 'http://id.loc.gov/vocabulary/mstatus/current']">3</case>
              <case test="$serlORintg='1' and $v264typeCount!='1' and bf:status/bf:Status//@rdf:*[. = 'http://id.loc.gov/vocabulary/mstatus/ceased']">3</case>
              <case test="$serlORintg='1' and bf:status/bf:Status//@rdf:*[. = 'http://id.loc.gov/vocabulary/mstatus/earliest']"><text> </text></case>
              <case test="$serlORintg='1' and $v264typeCount!='1' and not(bf:status/bf:Status)">2</case>
              <case test="$serlORintg='2' and $v264typeCount='1' and bf:status/bf:Status//@rdf:*[. = 'http://id.loc.gov/vocabulary/mstatus/current']">3</case>
              <case test="$serlORintg='2' and $v264typeCount='1' and bf:status/bf:Status//@rdf:*[. = 'http://id.loc.gov/vocabulary/mstatus/ceased']">3</case>
            </switch>
          </ind1>
          <ind2 default="1">
            <switch>
              <case test="local-name()='Production' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Production']">0</case>
              <case test="local-name()='Distribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Distribution']">2</case>
              <case test="local-name()='Manufacture' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manufacture']">3</case>
            </switch>
          </ind2>
          <switch>
            <case test="$v880Script != ''">
              <sf code="6"><transform><xsl:value-of select="concat('880-',$v880Occurence)"/></transform></sf>
            </case>
          </switch>
          <sf code="3" chopPunct="false" repeatable="false">
            <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
          </sf>
          <sf code="a" chopPunct="false">
             <switch>
               <case test="bflc:simplePlace[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                 <select xpath="bflc:simplePlace[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]" />
               </case>
               <case test="bf:place/*[
                      (local-name()='Place' or local-name()='Geographic' or local-name()='Authority' or local-name()='Resource') and
                      rdfs:label[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]
                     ]">
                 <select xpath="bf:place/*/rdfs:label[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]"/>
               </case>
               <case test="bf:place/*[
                      (local-name()='Place' or local-name()='Geographic' or local-name()='Authority') and
                      madsrdf:authoritativeLabel[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]
                     ]">
                 <select xpath="bf:place/*/madsrdf:authoritativeLabel[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]"/>
               </case>
             </switch>
          </sf>
          <sf code="b" chopPunct="false">
            <switch>
              <case test="bflc:simpleAgent[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <select xpath="bflc:simpleAgent[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]"/>
              </case>
              <case test="bf:agent/bf:Agent/rdfs:label[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <select xpath="bf:agent/bf:Agent/rdfs:label[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]"/>
              </case>
            </switch>
          </sf>
          <sf code="c" chopPunct="false">
            <switch>
              <case test="bflc:simpleDate[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <select xpath="bflc:simpleDate[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]"/>
              </case>
              <case test="bf:date[not(@rdf:datatype) and not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <select xpath="bf:date[not(@rdf:datatype) and not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]"/>
              </case>
            </switch>
          </sf>
        </df>
        <switch>
          <case test="$v880Script != ''">
            <df tag="880">
              <ind1 default=" ">
                <switch>
                  <case test="bf:status/bf:Status/@rdf:about = 'http://id.loc.gov/vocabulary/mstatus/current'">3</case>
                  <case test="bf:status/@rdf:resource = 'http://id.loc.gov/vocabulary/mstatus/current'">3</case>
                </switch>
              </ind1>
              <ind2 default="1">
                <switch>
                  <case test="local-name()='Production' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Production']">0</case>
                  <case test="local-name()='Distribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Distribution']">2</case>
                  <case test="local-name()='Manufacture' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manufacture']">3</case>
                </switch>
              </ind2>
              <sf code="6"><transform><xsl:value-of select="concat('264-',$v880Occurence,'/',$v880Script)"/></transform></sf>
              <sf code="a" chopPunct="false">
                <switch>
                  <case test="bflc:simplePlace[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <select xpath="bflc:simplePlace[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]" />
                  </case>
                  <case test="bf:place/*[
                              (local-name()='Place' or local-name()='Geographic' or local-name()='Authority') and
                              rdfs:label[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]
                             ]">
                    <select xpath="bf:place/bf:*/rdfs:label[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]"/>
                  </case>
                  <case test="bf:place/*[
                              (local-name()='Place' or local-name()='Geographic' or local-name()='Authority') and
                              madsrdf:authoritativeLabel[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]
                             ]">
                    <select xpath="bf:place/bf:*/madsrdf:authoritativeLabel[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]"/>
                  </case>
                </switch>
              </sf>
              <sf code="b" chopPunct="false">
                <switch>
                  <case test="bflc:simpleAgent[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <select xpath="bflc:simpleAgent[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]"/>
                  </case>
                  <case test="bf:agent/bf:Agent/rdfs:label[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <select xpath="bf:agent/bf:Agent/rdfs:label[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]"/>
                  </case>
                </switch>
              </sf>
              <sf code="c" chopPunct="false">
                <switch>
                  <case test="bflc:simpleDate[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <select xpath="bflc:simpleDate[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]"/>
                  </case>
                  <case test="bf:date[not(@rdf:datatype) and @xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                    <select xpath="bf:date[not(@rdf:datatype) and @xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]"/>
                  </case>
                </switch>
              </sf>
            </df>
          </case>
        </switch>
      </case>
      <case test="default">
        <transform>
          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Maximum number of 264 fields reached (10).</xsl:message>
        </transform>
      </case>
    </switch>
  </select>

  <df tag="264" repeatable="false">
    <context xpath="bf:Instance[not(rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/SecondaryInstance')]/bf:copyrightDate[. != '']">
      <ind1 default=" "/>
      <ind2 default="4"/>
      <var name="cDate">
        <switch>
          <case test="contains(., '©') or contains(., '℗')">
            <select xpath=".">
              <transform>
                <xsl:value-of select="."/>
              </transform>
            </select>
          </case>
          <case test="../bf:media//@rdf:*[.='http://id.loc.gov/vocabulary/mediaTypes/s'] and
                      (
                        ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/se'] or 
                        ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/st'] or 
                        ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/sw'] or 
                        ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/sq'] or 
                        ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/sb'] or 
                        ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/sd'] or 
                        ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/sz'] or 
                        ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/ss'] or 
                        ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/sg'] or 
                        ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/si'] or 
                        ../bf:carrier//@rdf:*[.='http://id.loc.gov/vocabulary/carriers/cr']
                      )">
            <select xpath=".">
              <transform>
                <xsl:value-of select="concat('℗', text())"/>
              </transform>
            </select>
          </case>
          <case test="default">
            <select xpath=".">
              <transform>
                <xsl:value-of select="concat('©', text())"/>
              </transform>
            </select>
          </case>
        </switch>
      </var>
      <sf code="c" chopPunct="true">
          <transform>
            <xsl:value-of select="$cDate"/>
          </transform>
      </sf>
    </context>
  </df>

</rules>
